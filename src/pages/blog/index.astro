---
import BaseLayout from "~/layouts/BaseLayout.astro";
import PageSection from "~/components/PageSection.astro";
import BlogCard from "~/components/BlogCard.astro";
import Chip from "~/components/Chip.svelte";

const blogPosts = await Astro.glob("./posts/**.md");
---

<BaseLayout>
	<PageSection id="blogs">
		<h1 class="title" style="align-self: center;">Blogs</h1>

		<div class="search-menu">
			<div class="input">
				<!-- svg search icon -->
				<svg width="1em" height="1em" viewBox="0 0 24 24"
					><path
						d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5A6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5S14 7.01 14 9.5S11.99 14 9.5 14"
					></path></svg
				>
				<input type="text" placeholder="Search" />
			</div>
			<div class="chips">
				<Chip client:load text="Blogs" activated={true} />
				<Chip client:load text="Releases" activated={true} />
			</div>
		</div>
		<div class="blogs-grid">
			{
				blogPosts
					.sort(
						(lhs, rhs) =>
							new Date(rhs.frontmatter.date).getTime() -
							new Date(lhs.frontmatter.date).getTime(),
					)
					.map((post, n) => {
						const animationDelay = `${n * 0.1 + 0.3}s`;
						const style: string = `animation: slide-up-blog 500ms backwards ${animationDelay};`;
						return (
							<BlogCard
								url={post.url ?? "#"}
								title={post.frontmatter.title}
								description={post.frontmatter.description}
								author={post.frontmatter.author}
								date={new Date(post.frontmatter.date)}
								thumbnail={post.frontmatter.thumbnail}
								thumbnail_alt={post.frontmatter.thumbnail}
								style={style}
							/>
						);
					})
			}
		</div>
	</PageSection>
</BaseLayout>

<style>
	@keyframes slide-up-blog {
		from {
			transform: translateY(32px);
			opacity: 0;
		}
	}
	@keyframes slide-up-regular {
		from {
			transform: translateY(8px);
			opacity: 0;
		}
	}

	#blogs {
		z-index: 1;
		/* border-bottom: 1px solid #6e59ff; */
		--grid-color: hsl(var(--base-hue), 12%, 18%);
		background-size: 20px 20px;
		background-image: linear-gradient(
				to right,
				var(--grid-color) 1px,
				transparent 1px
			),
			linear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);
	}

	#blogs > :global(.page-section-inner) {
		display: flex;
		flex-direction: column;
		align-items: center;
		width: 80rem;
		gap: 30px;
		padding-block: 128px;
	}
	#sim-hero::after {
	}

	.title {
		animation: slide-up-regular 500ms backwards 150ms;
	}

	.search-menu {
		animation: slide-up-regular 500ms backwards 200ms;

		z-index: 100;
		display: flex;
		flex-direction: row;
		gap: 12px;
		padding: 12px;
		border-radius: 5px;
		background-color: var(--background-secondary);
		width: 100%;
		position: sticky;
		top: 30px;
		box-shadow:
			0px 2px 5.5px rgba(0, 0, 0, 0.072),
			0px 6.1px 11px rgba(0, 0, 0, 0.103),
			0px 13.2px 16.4px rgba(0, 0, 0, 0.119),
			0px 24.7px 22.4px rgba(0, 0, 0, 0.127),
			0px 43.4px 30.1px rgba(0, 0, 0, 0.133),
			0px 77.6px 43.7px rgba(0, 0, 0, 0.142),
			0px 135px 88px rgba(0, 0, 0, 0.18),
			0px 0px 5.6px rgba(0, 0, 0, 0.014),
			0px 0px 18.7px rgba(0, 0, 0, 0.035),
			0px 0px 35.2px rgba(0, 0, 0, 0.058),
			0px 0px 42px rgba(0, 0, 0, 0.08);
	}
	.input {
		display: flex;
		justify-content: start;
		align-items: center;
		background-color: var(--background-primary);
		border-radius: 5px;
		padding: 2px;
		width: 100%;
	}
	.input:focus-within {
		outline: 2px solid var(--foreground-secondary);
	}
	.input input {
		border: none;
		background-color: inherit;
		color: var(--foreground-primary);
		font-family: var(--font-primary);
		font-weight: 500;
		width: 100%;
	}
	.input input::placeholder {
		color: var(--foreground-secondary);
		opacity: 1;
	}
	.input input:focus {
		outline: none;
	}
	.input svg {
		width: 20px;
		height: 20px;
		fill: var(--foreground-primary);
	}
	.chips {
		display: flex;
		flex-direction: row;
		gap: 12px;
	}

	.blogs-grid {
		display: flex;
		flex-direction: column;
		width: 100%;
		gap: 24px;
	}
</style>
