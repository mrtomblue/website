---
import BaseLayout from "~/layouts/BaseLayout.astro";
import PageSection from "~/components/PageSection.astro";
import BlogCard from "~/components/BlogCard.astro";
import Chip from "~/components/Chip.svelte";
import BlogsSearch from "~/components/BlogsSearch.svelte";

const blogPosts = await Astro.glob("./posts/**.md");
---

<BaseLayout>
	<PageSection id="blogs">
		<h1 class="title" style="align-self: center;">Blogs</h1>
		<BlogsSearch client:load blogs={
			blogPosts
				.map((post, n) => {
					const animationDelay = `${n * 0.1 + 0.3}s`;
					return (
						{
							url: post.url ?? "#",
							title: post.frontmatter.title,
							description: post.frontmatter.description,
							author: post.frontmatter.author,
							date: new Date(post.frontmatter.date),
							thumbnail: post.frontmatter.thumbnail,
							thumbnail_alt: post.frontmatter.thumbnail,
							tag: post.frontmatter.tag,
							style: `animation: slide-up-blog 500ms backwards ${animationDelay};`
						}
					);
				})
				.sort((a, b) => b.date.getTime() - a.date.getTime())
		}/>
		<div class="blogs-grid">
			
		</div>
	</PageSection>
</BaseLayout>

<style>
	@keyframes slide-up-blog {
		from {
			transform: translateY(32px);
			opacity: 0;
		}
	}
	@keyframes slide-up-regular {
		from {
			transform: translateY(8px);
			opacity: 0;
		}
	}

	#blogs {
		z-index: 1;
		/* border-bottom: 1px solid #6e59ff; */
		--grid-color: hsl(var(--base-hue), 12%, 18%);
		background-size: 20px 20px;
		background-image: linear-gradient(
				to right,
				var(--grid-color) 1px,
				transparent 1px
			),
			linear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);
	}

	#blogs > :global(.page-section-inner) {
		display: flex;
		flex-direction: column;
		align-items: center;
		width: 80rem;
		gap: 30px;
		padding-block: 128px;
	}
	@media only screen and (max-width: 800px) {
		#blogs > :global(.page-section-inner) {
			width: 100%;
		}
	}
	#sim-hero::after {
	}

	.title {
		animation: slide-up-regular 500ms backwards 150ms;
	}
</style>
