---
import BaseLayout from "~/layouts/BaseLayout.astro";
import PageSection from "~/components/PageSection.astro";
import BlogCard from "~/components/BlogCard.astro";
import Chip from "~/components/Chip.svelte";

const blogPosts = await Astro.glob("./posts/**.md");
---

<BaseLayout>
	<PageSection id="blogs">
		<h1 class="title" style="align-self: center;">Blogs</h1>

		<div class="search-menu">
			<div class="input">
				<!-- svg search icon -->
				<svg width="1em" height="1em" viewBox="0 0 24 24"
					><path
						d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5A6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5S14 7.01 14 9.5S11.99 14 9.5 14"
					></path></svg
				>
				<input type="text" placeholder="Search" />
			</div>
			<Chip client:load text="Blogs" activated={true} />
			<Chip client:load text="Releases" activated={true} />
		</div>
		<div class="blogs-grid">
			{
				blogPosts.map((post) => {
					return (
						<BlogCard
							url={post.url ?? "#"}
							title={post.frontmatter.title}
							description={post.frontmatter.description}
							author={post.frontmatter.author}
							date={new Date(post.frontmatter.date)}
							thumbnail={post.frontmatter.thumbnail}
							thumbnail_alt={post.frontmatter.thumbnail}
						/>
					);
				})
			}
		</div>
	</PageSection>
</BaseLayout>

<style>
	#blogs {
		z-index: 1;
		/* border-bottom: 1px solid #6e59ff; */
		--grid-color: hsl(var(--base-hue), 12%, 18%);
		background-size: 20px 20px;
		background-image: linear-gradient(
				to right,
				var(--grid-color) 1px,
				transparent 1px
			),
			linear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);
	}

	#blogs::before {
		content: "";
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 50%;
		opacity: 0.05;
		background-image: linear-gradient(transparent, #223ca9, #6e59ff);
	}

	#blogs > :global(.page-section-inner) {
		display: flex;
		flex-direction: column;
		align-items: center;
		width: 600rem;
		gap: 30px;
		min-block-size: 720px;
		block-size: 90vh;
		max-block-size: 1200px;
		padding-block: 128px;
	}

	.search-menu {
		display: flex;
		flex-direction: row;
		gap: 8px;
		padding: 8px;
		border-radius: 5px;
		background-color: var(--background-secondary);
		width: 100%;
	}
	.input {
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: var(--background-primary);
		border-radius: 5px;
		padding: 2px;
	}
	.input:focus-within {
		outline: 2px solid var(--foreground-secondary);
	}
	.input input {
		border: none;
		background-color: inherit;
		color: var(--foreground-primary);
		font-family: var(--font-primary);
		font-weight: 500;
	}
	.input input::placeholder {
		color: var(--foreground-secondary);
		opacity: 1;
	}
	.input input:focus {
		outline: none;
	}
	.input svg {
		width: 20px;
		height: 20px;
		fill: var(--foreground-primary);
	}
	.blogs-grid {
		display: flex;
		flex-direction: column;
		width: 100%;
	}
</style>
